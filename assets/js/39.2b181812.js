(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{404:function(a,s,e){"use strict";e.r(s);var n=e(25),t=Object(n.a)({},(function(){var a=this,s=a.$createElement,e=a._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"isnan与number-isnan的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#isnan与number-isnan的区别"}},[a._v("#")]),a._v(" isNaN与Number.isNaN的区别")]),a._v(" "),e("p",[a._v("很长一段时间，我都不知道"),e("code",[a._v("NaN")]),a._v("是"),e("code",[a._v("not a number")]),a._v("的意思，惭愧。")]),a._v(" "),e("p",[e("code",[a._v("NaN")]),a._v("是个特殊的存在，"),e("code",[a._v("x === x")]),a._v("这个真理被它颠覆了。也可以理解，不是数字嘛，不是数字的东西太多了。")]),a._v(" "),e("p",[a._v("我们经常有这样的需求，想把一个字符串转成数字，但又担心转换失败，于是代码会这么写：")]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("isNumber")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("str")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("isNaN")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("Number")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("str"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),e("p",[a._v("最近才发现，这么写并不是最优的。直接用"),e("code",[a._v("!isNaN(str)")]),a._v("就可以了。为什么呢？")]),a._v(" "),e("p",[a._v("原来，"),e("code",[a._v("isNaN")]),a._v("函数会首先尝试将这个参数转换为数值，然后才会对转换后的结果是否是"),e("code",[a._v("NaN")]),a._v("进行判断。")]),a._v(" "),e("p",[a._v("那为什么又出现了"),e("code",[a._v("Number.isNaN")]),a._v("呢？")]),a._v(" "),e("p",[a._v("我们先看下面的例子：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('isNaN(NaN);       // true\nisNaN(undefined); // true\nisNaN({});        // true\n\nisNaN(true);      // false\nisNaN(null);      // false\nisNaN(37);        // false\n\n// strings\nisNaN("37");      // false: 可以被转换成数值37\nisNaN("37.37");   // false: 可以被转换成数值37.37\nisNaN("37,5");    // true\nisNaN(\'123ABC\');  // true:  parseInt("123ABC")的结果是 123, 但是Number("123ABC")结果是 NaN\nisNaN("");        // false: 空字符串被转换成0\nisNaN(" ");       // false: 包含空格的字符串被转换成0\n\n// dates\nisNaN(new Date());                // false\nisNaN(new Date().toString());     // true\n\nisNaN("blabla")   // true: "blabla"不能转换成数值\n                  // 转换成数值失败， 返回NaN\n')])])]),e("p",[e("code",[a._v("isNaN")]),a._v("会先进行数值转换，它导致我们前面说的"),e("code",[a._v("not a number")]),a._v("这个语义化不对了，空字符串、日期怎么也是"),e("code",[a._v("false")]),a._v("？它们不是数字难道是错的？")]),a._v(" "),e("p",[a._v("所以，"),e("code",[a._v("Number.isNaN")]),a._v("就来了，它不会进行类型转换，意思是我只判断是不是"),e("code",[a._v("NaN")]),a._v("，类型不是数字的直接给"),e("code",[a._v("false")]),a._v("——对不起，你不在我的判定范围。")]),a._v(" "),e("p",[a._v("最明显的区别是：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("isNaN('abc'); // true\nNumber.isNaN('abc'); // false\n\nisNaN(undefined); // true\nNumber.isNaN(undefined); // false\n\nisNaN({});        // true\nNumber.isNaN({});        // false\n")])])])])}),[],!1,null,null,null);s.default=t.exports}}]);