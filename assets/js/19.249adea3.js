(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{383:function(t,s,a){"use strict";a.r(s);var n=a(25),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"持续集成之-gitlab-ci-yml篇"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#持续集成之-gitlab-ci-yml篇"}},[t._v("#")]),t._v(" 持续集成之.gitlab-ci.yml篇")]),t._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#gitlab-runner"}},[t._v("GitLab Runner")]),a("ul",[a("li",[a("a",{attrs:{href:"#注册"}},[t._v("注册")])]),a("li",[a("a",{attrs:{href:"#常见命令"}},[t._v("常见命令")])])])]),a("li",[a("a",{attrs:{href:"#stages"}},[t._v("Stages")])]),a("li",[a("a",{attrs:{href:"#jobs"}},[t._v("Jobs")])]),a("li",[a("a",{attrs:{href:"#gitlab-ci-yml"}},[t._v(".gitlab-ci.yml")]),a("ul",[a("li",[a("a",{attrs:{href:"#约束"}},[t._v("约束")])]),a("li",[a("a",{attrs:{href:"#示例"}},[t._v("示例")])]),a("li",[a("a",{attrs:{href:"#验证gitlab-ci-yml"}},[t._v("验证gitlab-ci.yml")])]),a("li",[a("a",{attrs:{href:"#跳过job"}},[t._v("跳过job")])]),a("li",[a("a",{attrs:{href:"#shell问题"}},[t._v("shell问题")])]),a("li",[a("a",{attrs:{href:"#使用docker"}},[t._v("使用docker")])])])])])]),a("p"),t._v(" "),a("p",[t._v("在介绍.gitlab-ci.yml之前，我们先看几个概念：")]),t._v(" "),a("h2",{attrs:{id:"gitlab-runner"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gitlab-runner"}},[t._v("#")]),t._v(" GitLab Runner")]),t._v(" "),a("p",[t._v("一般来说，构建任务都会占用很多的系统资源 (譬如编译代码)，而 "),a("code",[t._v("GitLab CI")]),t._v(" 又是 "),a("code",[t._v("GitLab")]),t._v("的一部分，如果由 "),a("code",[t._v("GitLab CI")]),t._v(" 来运行构建任务的话，在执行构建任务的时候，"),a("code",[t._v("GitLab")]),t._v(" 的性能会大幅下降。")]),t._v(" "),a("p",[a("code",[t._v("GitLab CI")]),t._v(" 最大的作用是管理各个项目的构建状态，因此，运行构建任务这种浪费资源的事情就交给 "),a("code",[t._v("GitLab Runner")]),t._v(" 来做啦。因为 "),a("code",[t._v("GitLab Runner")]),t._v(" 可以安装到不同的机器上，所以在构建任务运行期间并不会影响到 "),a("code",[t._v("GitLab")]),t._v(" 的性能。")]),t._v(" "),a("p",[a("code",[t._v("GitLab Runner")]),t._v("的安装特别简单，官网有各平台的安装方法或安装包，此处不再赘述。")]),t._v(" "),a("h3",{attrs:{id:"注册"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注册"}},[t._v("#")]),t._v(" 注册")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("打开"),a("code",[t._v("GitLab")]),t._v(" 中的项目页面，在项目设置中找到 "),a("code",[t._v("runners")])])]),t._v(" "),a("li",[a("p",[t._v("在"),a("code",[t._v("runner")]),t._v("运行的机器上，用命令行注册，比如：")])])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("gitlab-runner register --name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"XX"')]),t._v("  --url"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://git.xx.com/"')]),t._v(" --token"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"XXX"')]),t._v(" --executor"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"shell"')]),t._v("\n")])])]),a("p",[t._v("按照提示一步一步安装就可以了。其中，"),a("code",[t._v("executor")]),t._v("可以是多种类型，简单的话可以选"),a("code",[t._v("shell")]),t._v("。有熟悉"),a("code",[t._v("docker")]),t._v("的可以使用"),a("code",[t._v("docker")]),t._v("。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("配置文件在"),a("code",[t._v("/etc/gitlab-runner/config.toml")])]),t._v(" "),a("p",[t._v("配置项类似下面，可能需要手动添加"),a("code",[t._v("builds_dir")]),t._v("和"),a("code",[t._v("cache_dir")]),t._v("这两个变量，再重启服务")])])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('[[runners]]\nname = "216XX"\nurl = "https://git.XX.com/"\ntoken = "XX"\nexecutor = "shell"\nbuilds_dir = "/home/gitlab-runner/builds"\ncache_dir = "/home/gitlab-runner/cache"\n[runners.cache]\n')])])]),a("h3",{attrs:{id:"常见命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见命令"}},[t._v("#")]),t._v(" 常见命令")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" gitlab-runner list "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看各个 Runner 的状态")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" gitlab-runner stop "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 停止服务")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" gitlab-runner start "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启动服务")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" gitlab-runner restart "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重启服务")]),t._v("\n")])])]),a("h2",{attrs:{id:"stages"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stages"}},[t._v("#")]),t._v(" Stages")]),t._v(" "),a("p",[a("code",[t._v("Stages")]),t._v(" 表示构建阶段，说白了就是上面提到的流程。默认有3个"),a("code",[t._v("stages")]),t._v("："),a("code",[t._v("build")]),t._v(", "),a("code",[t._v("test")]),t._v(", "),a("code",[t._v("deploy")]),t._v("。我们可以在一次 "),a("code",[t._v("Pipeline")]),t._v(" 中定义多个 "),a("code",[t._v("Stages")]),t._v("，这些 "),a("code",[t._v("Stages")]),t._v(" 会有以下特点：")]),t._v(" "),a("ol",[a("li",[t._v("所有 "),a("code",[t._v("Stages")]),t._v(" 会按照顺序运行，即当一个 "),a("code",[t._v("Stage")]),t._v(" 完成后，下一个 "),a("code",[t._v("Stage")]),t._v("才会开始")]),t._v(" "),a("li",[t._v("只有当所有 "),a("code",[t._v("Stages")]),t._v(" 完成后，该构建任务 (Pipeline) 才会成功")]),t._v(" "),a("li",[t._v("如果任何一个 "),a("code",[t._v("Stage")]),t._v("失败，那么后面的"),a("code",[t._v("Stages")]),t._v("不会执行，该构建任务 (Pipeline) 失败")])]),t._v(" "),a("h2",{attrs:{id:"jobs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jobs"}},[t._v("#")]),t._v(" Jobs")]),t._v(" "),a("p",[a("code",[t._v("Jobs")]),t._v(" 表示构建工作，表示某个 "),a("code",[t._v("Stage")]),t._v(" 里面执行的工作。我们可以在 "),a("code",[t._v("Stages")]),t._v(" 里面定义多个 "),a("code",[t._v("Jobs")]),t._v("，这些 Jobs 会有以下特点：")]),t._v(" "),a("p",[t._v("1、相同 "),a("code",[t._v("Stage")]),t._v(" 中的 "),a("code",[t._v("Jobs")]),t._v(" 会并行执行")]),t._v(" "),a("p",[t._v("2、相同 "),a("code",[t._v("Stage")]),t._v(" 中的 "),a("code",[t._v("Jobs")]),t._v(" 都执行成功时，该 "),a("code",[t._v("Stage")]),t._v(" 才会成功")]),t._v(" "),a("p",[t._v("3、如果任何一个 "),a("code",[t._v("Job")]),t._v(" 失败，那么该 "),a("code",[t._v("Stage")]),t._v(" 失败，即该构建任务 (Pipeline) 失败")]),t._v(" "),a("h2",{attrs:{id:"gitlab-ci-yml"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gitlab-ci-yml"}},[t._v("#")]),t._v(" .gitlab-ci.yml")]),t._v(" "),a("p",[a("code",[t._v(".gitlab-ci.yml")]),t._v(" 用来配置 "),a("code",[t._v("CI")]),t._v(" 用你的项目中做哪些操作，这个文件位于仓库的根目录。")]),t._v(" "),a("p",[t._v("当有新内容"),a("code",[t._v("push")]),t._v("到仓库，或者有代码合并后，"),a("code",[t._v("GitLab")]),t._v("会查找是否有"),a("code",[t._v(".gitlab-ci.yml")]),t._v("文件，如果文件存在，"),a("code",[t._v("Runners")]),t._v("将会根据该文件的内容开始"),a("code",[t._v("build")]),t._v("本次"),a("code",[t._v("commit")]),t._v("。")]),t._v(" "),a("p",[a("code",[t._v(".gitlab-ci.yml")]),t._v(" 使用"),a("code",[t._v("YAML")]),t._v("语法， 你需要格外注意缩进格式，要用空格来缩进，不能用"),a("code",[t._v("tabs")]),t._v("来缩进。")]),t._v(" "),a("h3",{attrs:{id:"约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#约束"}},[t._v("#")]),t._v(" 约束")]),t._v(" "),a("p",[t._v("任务中必须得有"),a("code",[t._v("script")]),t._v("部分。")]),t._v(" "),a("h3",{attrs:{id:"示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定义 stages（阶段）。任务将按此顺序执行。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stages")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" build\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" test\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" deploy\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定义 job（任务）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("job1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tags")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" XX "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#只有标签为XX的runner才会执行这个任务")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("only")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" dev\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#只有dev分支提交代码才会执行这个任务。也可以是分支名称或触发器名称")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /^future"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(".*$/ "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#正则表达式，只有future-开头的分支才会执行")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(' echo "I am job1"\n    '),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(' echo "I am in test stage"\n\n'),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定义 job")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("job2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#如果此处没有定义stage，其默认也是test")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("only")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" master\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#只有master分支提交代码才会执行这个任务")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(' echo "I am job2"\n    '),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(' echo "I am in test stage"\n  '),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("allow_failure")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true ")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#允许失败，即不影响下步构建")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定义 job")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("job3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" build\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("except")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" dev "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#除了dev分支，其它分支提交代码都会执行这个任务")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(' echo "I am job3"\n    '),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(' echo "I am in build stage"\n  '),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("when")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" always "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#不管前面几步成功与否，永远会执行这一步。它有几个值：on_success （默认值）\\on_failure\\always\\manual（手动执行）")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定义 job")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v(".job4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#对于临时不想执行的job，可以选择在前面加个"."，这样就会跳过此步任务，否则你除了要注释掉这个jobj外，还需要注释上面为deploy的stage')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" deploy\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(' echo "I am job4"\n\n'),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 模板，相当于公用函数，有重复任务时很有用")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v(".job_template")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("&job_definition")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建一个锚，'job_definition'")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ruby"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.1")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" postgres\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" redis\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("test1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("<<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("*job_definition")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 利用锚'job_definition'来合并")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" test1 project\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("test2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("<<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("*job_definition")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 利用锚'job_definition'来合并")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" test2 project\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#下面几个都相当于全局变量，都可以添加到具体job中，这时会被子job的覆盖")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("before_script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(' echo "每个job之前都会执行"\n\n'),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("after_script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(' echo "每个job之后都会执行"\n\n'),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("variables")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#变量")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("DATABASE_URL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"postgres://postgres@postgres/my_database"')]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#在job中可以用${DATABASE_URL}来使用这个变量。常用的预定义变量有CI_COMMIT_REF_NAME（项目所在的分支或标签名称），CI_JOB_NAME（任务名称），CI_JOB_STAGE（任务阶段）")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("GIT_STRATEGY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"none"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#GIT策略，定义拉取代码的方式，有3种：clone/fetch/none，默认为clone，速度最慢，每步job都会重新clone一次代码。我们一般将它设置为none，在具体任务里设置为fetch就可以满足需求，毕竟不是每步都需要新代码，那也不符合我们测试的流程")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cache")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#缓存")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#因为缓存为不同管道和任务间共享，可能会覆盖，所以有时需要设置key")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("CI_COMMIT_REF_NAME"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启用每分支缓存。")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#key: "$CI_JOB_NAME/$CI_COMMIT_REF_NAME" # 启用每个任务和每个分支缓存。需要注意的是，如果是在windows中运行这个脚本，需要把$换成%')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("untracked")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true\t")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#缓存所有Git未跟踪的文件")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("paths")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#以下2个文件夹会被缓存起来，下次构建会解压出来")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" node_modules/\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" dist/\n")])])]),a("h3",{attrs:{id:"验证gitlab-ci-yml"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#验证gitlab-ci-yml"}},[t._v("#")]),t._v(" 验证gitlab-ci.yml")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://git.xx.com/ci/lint\n")])])]),a("h3",{attrs:{id:"跳过job"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#跳过job"}},[t._v("#")]),t._v(" 跳过job")]),t._v(" "),a("p",[t._v("如果你的"),a("code",[t._v("commit")]),t._v("信息包涵"),a("code",[t._v("[ci skip]")]),t._v("或者"),a("code",[t._v("[skip ci]")]),t._v("，不论大小写，这个"),a("code",[t._v("commit")]),t._v("将会被创建，但是"),a("code",[t._v("job")]),t._v("会被跳过")]),t._v(" "),a("h3",{attrs:{id:"shell问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shell问题"}},[t._v("#")]),t._v(" shell问题")]),t._v(" "),a("p",[t._v("使用"),a("code",[t._v("shell")]),t._v("脚本时，每步"),a("code",[t._v("job")]),t._v("一开始总有不短的等待时间，对于我们而言是不必要的，除去后台"),a("code",[t._v("jenkins_build")]),t._v("这步外，仍要最快"),a("code",[t._v("20")]),t._v("分钟。")]),t._v(" "),a("p",[t._v("之前，我曾在"),a("code",[t._v("release")]),t._v("分支时，暂时将各步整合到一个"),a("code",[t._v("job")]),t._v("里，时间缩短为"),a("code",[t._v("5")]),t._v("分钟。当然，这是不符合语义的。")]),t._v(" "),a("p",[t._v("最近，发现"),a("code",[t._v("docker")]),t._v("没有这个问题。所以，建议使用"),a("code",[t._v("docker")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"使用docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用docker"}},[t._v("#")]),t._v(" 使用docker")]),t._v(" "),a("h4",{attrs:{id:"示例-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例-2"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),a("p",[t._v("以下是我们项目中使用的"),a("code",[t._v(".gitlab-ci.yml")]),t._v("文件:")]),t._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stages")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" jenkins_build\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" install\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" test\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" build\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" e2e\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" zip\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" copy\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" end\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cache")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("policy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pull\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$CI_COMMIT_REF_NAME"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("paths")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" node_modules/\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" .eslintcache\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("variables")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("DOCKER_DRIVER")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" overlay2\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("GIT_STRATEGY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fetch"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v(".template")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("&templateDef")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建一个锚，'template'")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("only")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" master\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" release\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" dev\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("install")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" install\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("<<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("*templateDef")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 利用锚'templateDef'来合并")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cache")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$CI_COMMIT_REF_NAME"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("paths")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" node_modules\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" cnpm i\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("eslint")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("<<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("*templateDef")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" npm run eslint\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("unit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("<<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("*templateDef")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" npm run unit\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" build\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("<<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("*templateDef")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("only")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" release\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" npm run clear_dist\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" npm run build\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v(".e2e_ci")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" e2e\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("<<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("*templateDef")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" npm run e2e_ci\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("zip")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" zip\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("<<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("*templateDef")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("only")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" release\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" npm run zip\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Jenkins 复制")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jenkins_copyweb")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" copy\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("<<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("*templateDef")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("only")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" release\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ssh $JENKINS_SERVER_IP /jenkins/XX_copyweb.sh\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Jenkins 提交")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jenkins_commit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" end\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("<<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("*templateDef")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("only")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" release\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ssh $JENKINS_SERVER_IP /jenkins/XX_svn_commit.sh\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Jenkins 构建")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jenkins_build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" jenkins_build\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("<<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("*templateDef")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("only")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" master\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ssh $JENKINS_SERVER_IP /jenkins/build.sh\n")])])]),a("p",[t._v("其中，"),a("code",[t._v("XX:1.0")]),t._v("是我们自己创建的"),a("code",[t._v("docker")]),t._v("镜像，它主要安装了"),a("code",[t._v("nodejs")]),t._v("、"),a("code",[t._v("cnpm")]),t._v("、"),a("code",[t._v("jdk")]),t._v("、"),a("code",[t._v("sshpass")]),t._v("，其中"),a("code",[t._v("sshpass")]),t._v("不是必须的，它是使用密码登陆宿主机时的一种方案。")]),t._v(" "),a("p",[t._v("现在，我们使用"),a("code",[t._v("ssh")]),t._v("来与宿主机交互，需要将容器内生成的"),a("code",[t._v("ssh")]),t._v("的"),a("code",[t._v("key")]),t._v("（"),a("code",[t._v("ssh-keygen -t rsa")]),t._v("），即"),a("code",[t._v("/root/.ssh/id_rsa.pub")]),t._v("中内容，复制到宿主机的"),a("code",[t._v("/root/.ssh/authorized_keys")]),t._v("文件中。")]),t._v(" "),a("h4",{attrs:{id:"配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[t._v("#")]),t._v(" 配置")]),t._v(" "),a("p",[t._v("配置文件"),a("code",[t._v("/etc/gitlab-runner/config.toml")]),t._v("修改为")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("runners"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"216xx"')]),t._v("\n  url "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://git.xx.com/"')]),t._v("\n  token "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xx"')]),t._v("\n  executor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"docker"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("runners.docker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    tls_verify "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n    image "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xx:1.0"')]),t._v("\n    privileged "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n    disable_cache "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n    pull_policy "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"if-not-present"')]),t._v("\n    volumes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/cache"')]),t._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/tmp:/tmp:rw"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    shm_size "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("runners.cache"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("p",[t._v("其中，"),a("code",[t._v("pull_policy")]),t._v("是下载"),a("code",[t._v("docker")]),t._v("镜像"),a("code",[t._v("image")]),t._v("的策略，默认会先从网上找，没有就报错，我们改为先从本地找；"),a("code",[t._v("volumes")]),t._v("是将"),a("code",[t._v("docker")]),t._v("中的数据卷挂载到宿主机上。")])])}),[],!1,null,null,null);s.default=e.exports}}]);