(window.webpackJsonp=window.webpackJsonp||[]).push([[90],{455:function(v,_,e){"use strict";e.r(_);var t=e(25),o=Object(t.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h1",{attrs:{id:"浏览器缓存【转】"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浏览器缓存【转】"}},[v._v("#")]),v._v(" 浏览器缓存【转】")]),v._v(" "),e("p",[v._v("缓存是指代理服务器或客户端磁盘内保存的资源副本。利用缓存可减少对服务器的访问，因此也就节省了通信流量和通信时间。")]),v._v(" "),e("p",[v._v("浏览器缓存是浏览器在本地磁盘对用户最近请求过的文档进行存储，当访问者再次访问同一页面时，浏览器就可以直接从本地磁盘加载文档。")]),v._v(" "),e("p",[v._v("浏览器缓存的优点有：")]),v._v(" "),e("ol",[e("li",[v._v("减少了冗余的数据传输，节省了网费")]),v._v(" "),e("li",[v._v("减少了服务器的负担，大大提升了网站的性能")]),v._v(" "),e("li",[v._v("加快了客户端加载网页的速度")])]),v._v(" "),e("p",[v._v("浏览器缓存分为"),e("code",[v._v("强缓存")]),v._v("和"),e("code",[v._v("协商缓存")]),v._v("。")]),v._v(" "),e("p",[v._v("浏览器在第一次请求发生后，再次请求时：")]),v._v(" "),e("ol",[e("li",[v._v("浏览器会先获取该资源缓存的"),e("code",[v._v("header")]),v._v("信息，根据其中的"),e("code",[v._v("expires")]),v._v("和"),e("code",[v._v("cache-control")]),v._v("判断是否命中强缓存），若命中则直接从缓存中获取资源，包括缓存的"),e("code",[v._v("header")]),v._v("信息，本次请求不会与服务器进行通信。")]),v._v(" "),e("li",[v._v("如果没有命中强缓存，浏览器会发送请求到服务器，该请求会携带第一次请求返回的有关缓存的"),e("code",[v._v("header")]),v._v("字段信息（"),e("code",[v._v("Last-Modified/IF-Modified-Since")]),v._v("、"),e("code",[v._v("Etag/IF-None-Match")]),v._v("）,由服务器根据请求中的相关"),e("code",[v._v("header")]),v._v("信息来对比结果是否命中协商缓存，若命中，则服务器返回新的响应"),e("code",[v._v("header")]),v._v("信息更新缓存中的对应"),e("code",[v._v("header")]),v._v("信息，但是并不返回资源内容，它会告知浏览器可以直接从缓存获取；否则返回最新的资源内容")])]),v._v(" "),e("h2",{attrs:{id:"强缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#强缓存"}},[v._v("#")]),v._v(" 强缓存")]),v._v(" "),e("p",[v._v("强缓存是利用"),e("code",[v._v("http")]),v._v("的返回头中的"),e("code",[v._v("Expires")]),v._v("或者"),e("code",[v._v("Cache-Control")]),v._v("两个字段来控制的，用来表示资源的缓存时间。")]),v._v(" "),e("h3",{attrs:{id:"expires"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#expires"}},[v._v("#")]),v._v(" Expires")]),v._v(" "),e("p",[v._v("该字段是"),e("code",[v._v("http1.0")]),v._v("时的规范，它的值为一个绝对时间的"),e("code",[v._v("GMT")]),v._v("格式的时间字符串，比如"),e("code",[v._v("Expires:Mon,18 Oct 2066 23:59:59 GMT")]),v._v("。这个时间代表着这个资源的失效时间，在此时间之前，即命中缓存。")]),v._v(" "),e("p",[v._v("这种方式有一个明显的缺点，由于失效时间是一个绝对时间，所以当服务器与客户端时间偏差较大时，就会导致缓存混乱。")]),v._v(" "),e("h3",{attrs:{id:"cache-control"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cache-control"}},[v._v("#")]),v._v(" Cache-Control")]),v._v(" "),e("p",[e("code",[v._v("Cache-Control")]),v._v("是"),e("code",[v._v("http1.1")]),v._v("时出现的"),e("code",[v._v("header")]),v._v("信息，主要是利用该字段的"),e("code",[v._v("max-age")]),v._v("值来进行判断，它是一个相对时间，例如"),e("code",[v._v("Cache-Control:max-age=3600")]),v._v("，代表着资源的有效期是"),e("code",[v._v("3600秒")]),v._v("。")]),v._v(" "),e("p",[e("code",[v._v("cache-control")]),v._v("除了该字段外，还有下面几个比较常用的设置值：")]),v._v(" "),e("ul",[e("li",[v._v("no-cache：不使用本地缓存。需要使用缓存协商，先与服务器确认返回的响应是否被更改，如果之前的响应中存在"),e("code",[v._v("ETag")]),v._v("，那么请求的时候会与服务端验证，如果资源未被更改，则可以避免重新下载。")]),v._v(" "),e("li",[v._v("no-store：直接禁止游览器缓存数据，每次用户请求该资源，都会向服务器发送一个请求，每次都会下载完整的资源。")]),v._v(" "),e("li",[v._v("public：可以被所有的用户缓存，包括终端用户和"),e("code",[v._v("CDN")]),v._v("等中间代理服务器。")]),v._v(" "),e("li",[v._v("private：只能被终端用户的浏览器缓存，不允许"),e("code",[v._v("CDN")]),v._v("等中继缓存服务器对其缓存。")])]),v._v(" "),e("p",[e("code",[v._v("Cache-Control")]),v._v("与"),e("code",[v._v("Expires")]),v._v("可以在服务端配置同时启用，同时启用的时候"),e("code",[v._v("Cache-Control")]),v._v("优先级高。")]),v._v(" "),e("h2",{attrs:{id:"协商缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存"}},[v._v("#")]),v._v(" 协商缓存")]),v._v(" "),e("p",[v._v("协商缓存就是由服务器来确定缓存资源是否可用，所以客户端与服务器端要通过某种标识来进行通信，从而让服务器判断请求资源是否可以缓存访问。")]),v._v(" "),e("p",[v._v("这主要涉及到下面两组"),e("code",[v._v("header")]),v._v("字段，这两组搭档都是成对出现的，\n即第一次请求的响应头带上某个字段（"),e("code",[v._v("Last-Modified")]),v._v("或者"),e("code",[v._v("Etag")]),v._v("），则后续请求则会带上对应的请求字段（"),e("code",[v._v("If-Modified-Since")]),v._v("或者"),e("code",[v._v("If-None-Match")]),v._v("），\n若响应头没有"),e("code",[v._v("Last-Modified")]),v._v("或者"),e("code",[v._v("Etag")]),v._v("字段，则请求头也不会有对应的字段。")]),v._v(" "),e("h3",{attrs:{id:"last-modify-if-modify-since"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#last-modify-if-modify-since"}},[v._v("#")]),v._v(" Last-Modify/If-Modify-Since")]),v._v(" "),e("p",[v._v("浏览器第一次请求一个资源的时候，服务器返回的"),e("code",[v._v("header")]),v._v("中会加上"),e("code",[v._v("Last-Modified")]),v._v("，"),e("code",[v._v("Last-Modified")]),v._v("是一个时间，标识该资源的最后修改时间，例如"),e("code",[v._v("Last-Modified: Thu,31 Dec 2037 23:59:59 GMT")]),v._v("。")]),v._v(" "),e("p",[v._v("当浏览器再次请求该资源时，"),e("code",[v._v("request")]),v._v("的请求头中会包含"),e("code",[v._v("If-Modified-Since")]),v._v("，该值为缓存之前返回的"),e("code",[v._v("Last-Modified")]),v._v("。服务器收到"),e("code",[v._v("If-Modified-Since")]),v._v("后，根据资源的"),e("strong",[v._v("最后修改时间")]),v._v("判断是否命中缓存。")]),v._v(" "),e("p",[v._v("如果命中缓存，则返回"),e("code",[v._v("304")]),v._v("，并且不会返回资源内容，也不会返回"),e("code",[v._v("Last-Modified")]),v._v("。")]),v._v(" "),e("h3",{attrs:{id:"etag-if-none-match"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#etag-if-none-match"}},[v._v("#")]),v._v(" ETag/If-None-Match")]),v._v(" "),e("p",[v._v("与"),e("code",[v._v("Last-Modified/If-Modified-Since")]),v._v("不同的是，"),e("code",[v._v("Etag/If-None-Match")]),v._v("返回的是一个"),e("strong",[v._v("校验码")]),v._v("。")]),v._v(" "),e("p",[e("code",[v._v("ETag")]),v._v("可以保证每一个资源是唯一的，资源变化都会导致"),e("code",[v._v("ETag")]),v._v("变化。服务器根据浏览器发送的"),e("code",[v._v("If-None-Match")]),v._v("值来判断是否命中缓存。")]),v._v(" "),e("p",[v._v("与"),e("code",[v._v("Last-Modified")]),v._v("不一样的是，当服务器返回"),e("code",[v._v("304 Not Modified")]),v._v("的响应时，由于"),e("code",[v._v("ETag")]),v._v("重新生成过，"),e("code",[v._v("response header")]),v._v("中还会把这个"),e("code",[v._v("ETag")]),v._v("返回，即使这个"),e("code",[v._v("ETag")]),v._v("跟之前的没有变化。")]),v._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[v._v("为什么要有Etag")]),v._v(" "),e("p",[v._v("你可能会觉得使用"),e("code",[v._v("Last-Modified")]),v._v("已经足以让浏览器知道本地的缓存副本是否足够新，为什么还需要"),e("code",[v._v("Etag")]),v._v("呢？\n"),e("code",[v._v("HTTP1.1")]),v._v("中"),e("code",[v._v("Etag")]),v._v("的出现主要是为了解决几个"),e("code",[v._v("Last-Modified")]),v._v("比较难解决的问题：")]),v._v(" "),e("ul",[e("li",[v._v("一些文件也许会周期性的更改，但它的内容并不改变（仅仅改变的修改时间），这个时候我们并不希望客户端认为这个文件被修改了，而重新"),e("code",[v._v("GET")])]),v._v(" "),e("li",[v._v("某些文件修改非常频繁，比如在秒以下的时间内进行修改，(比方说1s内修改了N次)，"),e("code",[v._v("If-Modified-Since")]),v._v("能检查到的粒度是"),e("code",[v._v("s")]),v._v("级的，这种修改无法判断(或者说"),e("code",[v._v("UNIX")]),v._v("记录"),e("code",[v._v("MTIME")]),v._v("只能精确到秒)")]),v._v(" "),e("li",[v._v("某些服务器不能精确地得到文件的最后修改时间。")])])]),v._v(" "),e("p",[e("code",[v._v("Last-Modified")]),v._v("与"),e("code",[v._v("ETag")]),v._v("是可以一起使用的，服务器会优先验证"),e("code",[v._v("ETag")]),v._v("，一致的情况下，才会继续比对"),e("code",[v._v("Last-Modified")]),v._v("，最后才决定是否返回"),e("code",[v._v("304")]),v._v("。")]),v._v(" "),e("h2",{attrs:{id:"小结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[v._v("#")]),v._v(" 小结")]),v._v(" "),e("p",[v._v("强缓存与协商缓存的区别可以用下表来表示：")]),v._v(" "),e("table",[e("thead",[e("tr",[e("th",[v._v("缓存类型")]),v._v(" "),e("th",{staticStyle:{"text-align":"center"}},[v._v("获取资源形式")]),v._v(" "),e("th",{staticStyle:{"text-align":"center"}},[v._v("状态码")]),v._v(" "),e("th",{staticStyle:{"text-align":"center"}},[v._v("发送请求到服务器")])])]),v._v(" "),e("tbody",[e("tr",[e("td",[v._v("强缓存")]),v._v(" "),e("td",{staticStyle:{"text-align":"center"}},[v._v("从缓存取")]),v._v(" "),e("td",{staticStyle:{"text-align":"center"}},[v._v("200（from cache）")]),v._v(" "),e("td",{staticStyle:{"text-align":"center"}},[v._v("否，直接从缓存取")])]),v._v(" "),e("tr",[e("td",[v._v("协商缓存")]),v._v(" "),e("td",{staticStyle:{"text-align":"center"}},[v._v("从缓存取")]),v._v(" "),e("td",{staticStyle:{"text-align":"center"}},[v._v("304（Not Modified）")]),v._v(" "),e("td",{staticStyle:{"text-align":"center"}},[v._v("是，通过服务器来告知缓存是否可用")])])])]),v._v(" "),e("p",[v._v("转自："),e("a",{attrs:{href:"https://www.cnblogs.com/iceflorence/p/8905825.html",target:"_blank",rel:"noopener noreferrer"}},[v._v("浏览器缓存：强缓存和协商缓存"),e("OutboundLink")],1)])])}),[],!1,null,null,null);_.default=o.exports}}]);