(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{388:function(t,e,a){"use strict";a.r(e);var s=a(25),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"webpack配置-todo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack配置-todo"}},[t._v("#")]),t._v(" webpack配置 TODO")]),t._v(" "),a("h2",{attrs:{id:"loader"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#loader"}},[t._v("#")]),t._v(" loader")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.webpackjs.com/api/loaders/",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("loader")]),a("OutboundLink")],1),t._v("是"),a("code",[t._v("webpack")]),t._v("的核心概念之一，它的基本工作流是将一个文件以字符串的形式读入，对其进行语法分析及转换（或者直接在"),a("code",[t._v("loader")]),t._v("中引入现成的编译工具，例如"),a("code",[t._v("sass-loader")]),t._v("中就引入了"),a("code",[t._v("node-sass")]),t._v("将"),a("code",[t._v("SCSS")]),t._v("代码转换为"),a("code",[t._v("CSS")]),t._v("代码，再交由"),a("code",[t._v("css-loader")]),t._v("处理），然后交由下一环节进行处理。")]),t._v(" "),a("p",[t._v("所有载入的模块最终都会经过"),a("code",[t._v("moduleFactory")]),t._v("处理，转成"),a("code",[t._v("js")]),t._v("可以识别和运行的代码，从而完成模块的集成。")]),t._v(" "),a("p",[t._v("也就是说，其实"),a("code",[t._v("webpack")]),t._v("只能处理"),a("code",[t._v("js")]),t._v("，但有了"),a("code",[t._v("loader")]),t._v("，它可以预处理文件，就可以打包除"),a("code",[t._v("js")]),t._v("外的所有静态资源了。")]),t._v(" "),a("p",[t._v("在写法上，它使用"),a("code",[t._v("nodejs")]),t._v("开发，只是一个导出为函数的"),a("code",[t._v("js")]),t._v("模块，"),a("code",[t._v("loader runner")]),t._v("会调用这个函数，然后把上一个"),a("code",[t._v("loader")]),t._v("产生的结果或者资源文件("),a("code",[t._v("resource file")]),t._v(")传入进去。函数的"),a("code",[t._v("this")]),t._v("上下文将由"),a("code",[t._v("webpack")]),t._v("填充，并且"),a("code",[t._v("loader runner")]),t._v("具有一些有用方法，可以使"),a("code",[t._v("loader")]),t._v("改变为异步调用方式，或者获取"),a("code",[t._v("query")]),t._v("参数。")]),t._v(" "),a("p",[t._v("平时我们使用"),a("code",[t._v("loader")]),t._v("是这样的：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("use"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a-loader'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b-loader'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'c-loader'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("p",[t._v("它的执行顺序其实是这样的：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("|- a-loader `pitch`\n  |- b-loader `pitch`\n    |- c-loader `pitch`\n      |- requested module is picked up as a dependency\n    |- c-loader normal execution\n  |- b-loader normal execution\n|- a-loader normal execution\n")])])]),a("p",[t._v("如果某一个"),a("code",[t._v("loader")]),t._v("的"),a("code",[t._v("pitch")]),t._v("函数返回了某个结果，则会跳过下面的"),a("code",[t._v("loader")]),t._v("。")]),t._v(" "),a("p",[t._v("例如，假设"),a("code",[t._v("b-loader")]),t._v("的"),a("code",[t._v("pitch")]),t._v("这样返回了：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("exports")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("someSyncOperation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("content"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("pitch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("remainingRequest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" precedingRequest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("someCondition")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"module.exports = require("')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("stringify")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-!"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" remainingRequest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('");"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("上面的步骤将被缩短为：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("|- a-loader `pitch`\n  |- b-loader `pitch` returns a module\n|- a-loader normal execution\n")])])]),a("p",[t._v("像"),a("code",[t._v("cache-loader")]),t._v("就是这个原理，会把编译结果进行缓存。")]),t._v(" "),a("blockquote",[a("p",[t._v("对于不考虑"),a("code",[t._v("pitch")]),t._v("的"),a("code",[t._v("loader")]),t._v("而言，可以简单理解为是从后往前执行的。")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("单一职责")]),t._v(" "),a("p",[a("code",[t._v("loader")]),t._v("支持链式调用，所以开发上需要严格遵循"),a("code",[t._v("单一职责")]),t._v("原则，即每个"),a("code",[t._v("loader")]),t._v("只负责自己需要负责的事情：")]),t._v(" "),a("p",[t._v("将输入信息进行处理，并输出为下一个"),a("code",[t._v("loader")]),t._v("可识别的格式。")])]),t._v(" "),a("h2",{attrs:{id:"plugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#plugin"}},[t._v("#")]),t._v(" plugin")]),t._v(" "),a("p",[a("code",[t._v("plugin")]),t._v("也就是插件，插件的能力与"),a("code",[t._v("loader")]),t._v("解析转换文件不一样，它可以各种方式自定义"),a("code",[t._v("webpack")]),t._v("的构建过程。\n其实就是不同的生命周期提供了大批量的钩子函数，可以有同步、异步不同的处理，方便我们在构建过程中进行额外操作。")]),t._v(" "),a("p",[t._v("目前"),a("code",[t._v("webpack")]),t._v("已经提供了丰富的"),a("a",{attrs:{href:"https://www.webpackjs.com/plugins/",target:"_blank",rel:"noopener noreferrer"}},[t._v("插件"),a("OutboundLink")],1),t._v("，已经可以满足大部分需求。")]),t._v(" "),a("p",[t._v("像最常用的是"),a("code",[t._v("html-webpack-plugin")]),t._v("，如果要用页面访问服务的话，几乎都会使用到它，它会从入口文件开始，把所有引用到的"),a("code",[t._v("js")]),t._v("与"),a("code",[t._v("css")]),t._v("都注入到模板页面上。")]),t._v(" "),a("p",[t._v("其它处理"),a("code",[t._v("js")]),t._v("压缩、"),a("code",[t._v("css")]),t._v("压缩、代码分割、"),a("code",[t._v("dll")]),t._v("预编译、"),a("code",[t._v("md5-hash")]),t._v("、资源复制、清除等，应有尽有。如果满足不了你的需求，就自己实现一个。")]),t._v(" "),a("p",[t._v("在插件开发中，常用的有2个对象："),a("code",[t._v("Compiler")]),t._v("和"),a("code",[t._v("Compilation")]),t._v("，名字有些像，有什么区别呢？")]),t._v(" "),a("p",[a("code",[t._v("Compiler")]),t._v("对象包含了"),a("code",[t._v("webpack")]),t._v("环境所有的配置信息，包含"),a("code",[t._v("options")]),t._v("、"),a("code",[t._v("loaders")]),t._v("、"),a("code",[t._v("plugins")]),t._v("，在"),a("code",[t._v("webpack")]),t._v("启动时候被实例化，是全局唯一的。我们可以把它理解为"),a("code",[t._v("webpack")]),t._v("的实列。开发时，我们可以从中拿到所有和"),a("code",[t._v("webpack")]),t._v("主环境相关的内容。")]),t._v(" "),a("p",[a("code",[t._v("Compilation")]),t._v("对象包含了当前的模块资源、编译生成资源、文件的变化等。当"),a("code",[t._v("webpack")]),t._v("在开发模式下运行时，每当检测到一个文件发生改变的时候，那么一次新的"),a("code",[t._v("Compilation")]),t._v("将会被创建，从而生成一组新的编译资源。最显著的特征是涉及变化的文件会触发对应的"),a("code",[t._v("loader")]),t._v("运行。")]),t._v(" "),a("p",[t._v("二者的区别是："),a("code",[t._v("Compiler")]),t._v("代表了是整个"),a("code",[t._v("webpack")]),t._v("从启动到关闭的生命周期； "),a("code",[t._v("Compilation")]),t._v("只代表了一次新的编译。")]),t._v(" "),a("p",[t._v("以下常见的事件钩子：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("钩子")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("作用")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("参数")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("类型")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("after-plugins")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("设置完一组初始化插件之后")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("compiler")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("sync")])]),t._v(" "),a("tr",[a("td",[t._v("after-resolvers")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("设置完 resolvers 之后")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("compiler")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("sync")])]),t._v(" "),a("tr",[a("td",[t._v("run")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("在读取记录之前")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("compiler")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("async")])]),t._v(" "),a("tr",[a("td",[t._v("compile")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("在创建新 compilation之前")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("compilationParams")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("sync")])]),t._v(" "),a("tr",[a("td",[t._v("compilation")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("compilation 创建完成")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("compilation")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("sync")])]),t._v(" "),a("tr",[a("td",[t._v("emit")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("在生成资源并输出到目录之前")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("compilation")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("async")])]),t._v(" "),a("tr",[a("td",[t._v("after-emit")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("在生成资源并输出到目录之后")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("compilation")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("async")])]),t._v(" "),a("tr",[a("td",[t._v("done")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("完成编译")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("stats")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("sync")])])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("plugin与loader的区别")]),t._v(" "),a("p",[a("code",[t._v("loader")]),t._v("是一个转换器，将"),a("code",[t._v("A")]),t._v("文件进行编译成"),a("code",[t._v("B")]),t._v("文件，属于单纯的文件转换过程。\n"),a("code",[t._v("plugin")]),t._v("是一个扩展器，它丰富了"),a("code",[t._v("webpack")]),t._v("本身，针对是"),a("code",[t._v("loader")]),t._v("结束后、"),a("code",[t._v("webpack")]),t._v(" 打包的整个过程。它并不直接操作文件，而是基于事件机制工作，会监听"),a("code",[t._v("webpack")]),t._v("打包过程中的某些节点，执行广泛的任务。")])]),t._v(" "),a("h2",{attrs:{id:"热更新-todo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#热更新-todo"}},[t._v("#")]),t._v(" 热更新 TODO")]),t._v(" "),a("p",[t._v("热更新是"),a("code",[t._v("webpack")]),t._v("的一项非常有效的能力，大大提高了我们的开发效率。\n从名字上看也能理解，修改代码后，不需要刷新浏览器，就可以直接在页面上看到更改后的内容。")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://blog.csdn.net/lunahaijiao/article/details/104509446/?utm_medium=distribute.pc_relevant.none-task-blog-title-6&spm=1001.2101.3001.4242",target:"_blank",rel:"noopener noreferrer"}},[t._v("玩转 webpack，使你的打包速度提升 90%"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=n.exports}}]);