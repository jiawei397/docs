(window.webpackJsonp=window.webpackJsonp||[]).push([[95],{461:function(t,s,a){"use strict";a.r(s);var v=a(25),_=Object(v.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"网络相关笔记"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网络相关笔记"}},[t._v("#")]),t._v(" 网络相关笔记")]),t._v(" "),a("h2",{attrs:{id:"避免浏览器自动播放文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#避免浏览器自动播放文件"}},[t._v("#")]),t._v(" 避免浏览器自动播放文件")]),t._v(" "),a("p",[t._v("有时对于图片、视频，浏览器会视能力，自动为用户显示或播放。这主要是由于Web服务器在返回文件本身数据的同时，返回了一些特殊的MIME类型，\n比如："),a("code",[t._v("image/jpeg")]),t._v("（JPEG图像）,"),a("code",[t._v("application/pdf")]),t._v("（PDF文档）,"),a("code",[t._v("video/mpeg")]),t._v("（MPEG动画）。\n这些"),a("code",[t._v("MIMIE")]),t._v("类型实际上是告诉浏览器，文件数据到底是什么，这样浏览器就能更好的为用户展示数据。\n现在像图片、"),a("code",[t._v("pdf")]),t._v("、甚至是视频基本都是可以直接在浏览器中展示和播放的。\n但是有时，我们需要浏览器为用户下载文件而不是直接播放，\n而"),a("code",[t._v("Nginx")]),t._v("在默认配置下，会根据文件的后缀来匹配相应的"),a("code",[t._v("MIME")]),t._v("类型，并写入"),a("code",[t._v("Response header")]),t._v("，导致浏览器播放文件而不是下载，\n这时需要通过配置让"),a("code",[t._v("Nginx")]),t._v("返回的"),a("code",[t._v("MIME")]),t._v("类型为下面这个类型：")]),t._v(" "),a("p",[a("code",[t._v("application/octet-stream")])]),t._v(" "),a("p",[t._v("这个类型会让浏览器认为响应是普通的文件流，并提示用户下载文件。可以通过在"),a("code",[t._v("Nginx")]),t._v("的配置文件中做如下配置达到这样的目的：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("location /download/ {\n    types        { }\n    default_type application/octet-stream;\n}\n")])])]),a("p",[t._v("这样当"),a("code",[t._v("Url")]),t._v("路径中包含"),a("code",[t._v("/download/")]),t._v("时，"),a("code",[t._v("MIME")]),t._v("类型会被重置为"),a("code",[t._v("application/octet-stream")]),t._v("。\n另外，"),a("code",[t._v("nginx")]),t._v("自带的"),a("code",[t._v("MIME")]),t._v("类型映射表保存在"),a("code",[t._v("conf/mime.types")]),t._v("中。")]),t._v(" "),a("p",[t._v("在"),a("code",[t._v("express")]),t._v("中返回头设置这个格式，就可以文件下载：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/test'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Content-Type'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'application/octet-stream'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Content-Disposition'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"attachment; filename=test.txt"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello test!'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("其中，"),a("code",[t._v("Content-Disposition")]),t._v("可以设置文件名称。")]),t._v(" "),a("p",[t._v("当然，也可以这样写：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/test'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'application/octet-stream'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("attachment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc.txt'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello test!'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"http协议不同版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http协议不同版本"}},[t._v("#")]),t._v(" http协议不同版本")]),t._v(" "),a("h3",{attrs:{id:"http1-1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http1-1"}},[t._v("#")]),t._v(" http1.1")]),t._v(" "),a("p",[a("code",[t._v("HTTP/1.1")]),t._v(" 为网络效率做了大量的优化，最核心的有如下三种方式：")]),t._v(" "),a("ul",[a("li",[t._v("增加了持久连接；")]),t._v(" "),a("li",[t._v("浏览器为每个域名最多同时维护 6 个 "),a("code",[t._v("TCP")]),t._v(" 持久连接；")]),t._v(" "),a("li",[t._v("使用 "),a("code",[t._v("CDN")]),t._v(" 的实现域名分片机制。")])]),t._v(" "),a("p",[t._v("引入了 "),a("code",[t._v("CDN")]),t._v("，并同时为每个域名维护 "),a("strong",[t._v("6")]),t._v(" 个连接，这样就大大减轻了整个资源的下载时间。")]),t._v(" "),a("p",[t._v("这里我们可以简单计算下：如果使用单个 "),a("code",[t._v("TCP")]),t._v(" 的持久连接，下载 100 个资源所花费的时间为 "),a("code",[t._v("100 * n * RTT")]),t._v("；若通过上面的技术，就可以把整个时间缩短为 "),a("code",[t._v("100 * n * RTT/(6 * CDN 个数)")]),t._v("。从这个计算结果来看，我们的页面加载速度变快了不少。")]),t._v(" "),a("p",[a("strong",[t._v("影响 HTTP/1.1 效率")]),t._v("的三个主要因素：")]),t._v(" "),a("ol",[a("li",[t._v("TCP 的慢启动")]),t._v(" "),a("li",[t._v("多条 TCP 连接竞争带宽")]),t._v(" "),a("li",[t._v("队头阻塞")])]),t._v(" "),a("h3",{attrs:{id:"http2-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http2-0"}},[t._v("#")]),t._v(" http2.0")]),t._v(" "),a("p",[a("code",[t._v("HTTP/2")]),t._v(" 采用"),a("strong",[t._v("多路复用")]),t._v("机制来解决以上"),a("code",[t._v("1.1")]),t._v("的问题。")]),t._v(" "),a("p",[t._v("多路复用是通过在协议栈中添加"),a("strong",[t._v("二进制分帧层")]),t._v("来实现的。有了二进制分帧层还能够实现"),a("em",[t._v("请求的优先级")]),t._v("、"),a("em",[t._v("服务器推送")]),t._v("、"),a("em",[t._v("头部压缩")]),t._v("等特性，从而大大提升了文件传输效率。")]),t._v(" "),a("p",[t._v("它可以通过一个 TCP 连接来发送多个 URL 请求，能充分利用带宽。在 HTTP/1.1 时代，为了提升并行下载效率，浏览器为每个域名维护了 6 个 TCP 连接；而采用 HTTP/2 之后，浏览器只需要为每个域名维护 1 个 TCP 持久连接，同时还解决了 HTTP/1.1 "),a("strong",[t._v("队头阻塞")]),t._v("的问题。")]),t._v(" "),a("p",[t._v("一个域名只使用一个 TCP 长连接和消除队头阻塞问题")]),t._v(" "),a("p",[a("strong",[t._v("缺陷")]),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("队头阻塞。虽然解决了应用层面的阻塞，但tcp本身的丢包阻塞没有办法防止。有测试数据表明，当系统达到了 2% 的丢包率时，HTTP/1.1 的传输效率反而比 HTTP/2 表现得更好。")]),t._v(" "),a("li",[t._v("TCP 建立连接的延时。网络延迟又称为 "),a("code",[t._v("RTT")]),t._v("（"),a("code",[t._v("Round Trip Time")]),t._v("）。我们把从浏览器发送一个数据包到服务器，再从服务器返回数据包到浏览器的整个往返时间称为 "),a("code",[t._v("RTT")]),t._v("。"),a("code",[t._v("RTT")]),t._v("是反映网络性能的一个重要指标。在传输数据之前，我们需要花掉 3～4 个 "),a("code",[t._v("RTT")]),t._v("。")]),t._v(" "),a("li",[t._v("TCP 协议僵化。第一个是中间设备的僵化。另一个是操作系统。")])]),t._v(" "),a("h3",{attrs:{id:"http3-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http3-0"}},[t._v("#")]),t._v(" http3.0")]),t._v(" "),a("p",[a("code",[t._v("HTTP/3")]),t._v(" 基于"),a("strong",[t._v("UDP")]),t._v("实现了类似于"),a("code",[t._v("TCP")]),t._v("的"),a("strong",[t._v("多路数据流")]),t._v("、"),a("strong",[t._v("传输可靠性")]),t._v("等功能，我们把这套功能称为"),a("strong",[t._v("QUIC协议")]),t._v("。")]),t._v(" "),a("ul",[a("li",[t._v("实现了类似 "),a("code",[t._v("TCP")]),t._v(" 的流量控制、传输可靠性的功能")]),t._v(" "),a("li",[t._v("集成了 "),a("code",[t._v("TLS")]),t._v(" 加密功能。减少了握手花费的RTT个数（把7次减少为3次）")]),t._v(" "),a("li",[t._v("实现了 "),a("code",[t._v("HTTP/2")]),t._v(" 中的多路复用功能。")]),t._v(" "),a("li",[t._v("实现了快速握手功能")])]),t._v(" "),a("p",[a("strong",[t._v("问题")]),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("服务器和浏览器支持情况。")]),t._v(" "),a("li",[t._v("系统内核对"),a("code",[t._v("UDP")]),t._v("优化不足。")]),t._v(" "),a("li",[t._v("中间设备僵化，这些设备对 "),a("code",[t._v("UDP")]),t._v(" 的优化程度远远低于"),a("code",[t._v("TCP")]),t._v("，据统计使用"),a("code",[t._v("QUIC")]),t._v("协议时，大约有 "),a("em",[t._v("3%～7%")]),t._v(" 的丢包率。")])]),t._v(" "),a("h2",{attrs:{id:"https"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#https"}},[t._v("#")]),t._v(" https")]),t._v(" "),a("p",[a("code",[t._v("HTTPS")]),t._v(" 协议是由 "),a("code",[t._v("HTTP")]),t._v(" 加上 "),a("code",[t._v("TLS/SSL")]),t._v(" 协议构建的可进行加密传输、身份认证的网络协议，主要通过数字证书、加密算法、非对称密钥等技术完成互联网数据传输加密，实现互联网传输安全保护。设计目标主要有三个。")]),t._v(" "),a("ol",[a("li",[t._v("数据保密性：保证数据内容在传输的过程中不会被第三方查看。就像快递员传递包裹一样，都进行了封装，别人无法获知里面装了什么。")]),t._v(" "),a("li",[t._v("数据完整性：及时发现被第三方篡改的传输内容。就像快递员虽然不知道包裹里装了什么东西，但他有可能中途掉包，数据完整性就是指如果被掉包，我们能轻松发现并拒收。")]),t._v(" "),a("li",[t._v("身份校验安全性：保证数据到达用户期望的目的地。就像我们邮寄包裹时，虽然是一个封装好的未掉包的包裹，但必须确定这个包裹不会送错地方，通过身份校验来确保送对了地方。")])]),t._v(" "),a("p",[t._v("由于 "),a("code",[t._v("HTTP")]),t._v(" 的明文传输特性，在传输过程中的每一个环节，数据都有可能被窃取或者篡改，这倒逼着我们需要引入"),a("strong",[t._v("加密机制")]),t._v("。于是我们在 "),a("code",[t._v("HTTP")]),t._v(" 协议栈的 "),a("code",[t._v("TCP")]),t._v(" 和 "),a("code",[t._v("HTTP")]),t._v(" 层之间插入了一个"),a("strong",[t._v("安全层")]),t._v("，负责数据的加密和解密操作。")]),t._v(" "),a("p",[t._v("我们使用"),a("strong",[t._v("对称加密")]),t._v("实现了"),a("strong",[t._v("安全层")]),t._v("，但是由于对称加密的"),a("strong",[t._v("密钥")]),t._v("需要"),a("code",[t._v("明文传输")]),t._v("，所以我们又将"),a("strong",[t._v("对称加密")]),t._v("改造成了"),a("strong",[t._v("非对称加密")]),t._v("。")]),t._v(" "),a("p",[t._v("但是"),a("strong",[t._v("非对称加密效率低")]),t._v("且"),a("strong",[t._v("不能加密服务器到浏览器端的数据")]),t._v("，于是我们又继续改在安全层，采用"),a("strong",[t._v("对称加密的方式加密传输数据")]),t._v("和"),a("strong",[t._v("非对称加密的方式来传输密钥")]),t._v("，这样我们就解决传输效率和两端数据安全传输的问题。")]),t._v(" "),a("p",[t._v("采用这种方式虽然能保证数据的安全传输，但是依然没办法证明服务器是可靠的，于是又引入了"),a("strong",[t._v("数字证书")]),t._v("，数字证书是由"),a("code",[t._v("CA")]),t._v("签名过的，所以浏览器能够验证该证书的可靠性。")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("百看不如一试")]),t._v(" "),a("p",[t._v("可以亲手搭建一个 "),a("code",[t._v("HTTPS")]),t._v(" 的站点，可以去 "),a("code",[t._v("freeSSL")]),t._v(" 申请免费证书。")]),t._v(" "),a("p",[t._v("中文：https://freessl.cn/")]),t._v(" "),a("p",[t._v("英文：https://www.freessl.com/")])])])}),[],!1,null,null,null);s.default=_.exports}}]);