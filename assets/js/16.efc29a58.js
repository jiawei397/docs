(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{380:function(t,v,_){"use strict";_.r(v);var s=_(25),a=Object(s.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"算法相关"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#算法相关"}},[t._v("#")]),t._v(" 算法相关")]),t._v(" "),_("h2",{attrs:{id:"介绍下深度优先遍历和广度优先遍历-如何实现"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#介绍下深度优先遍历和广度优先遍历-如何实现"}},[t._v("#")]),t._v(" 介绍下深度优先遍历和广度优先遍历，如何实现？")]),t._v(" "),_("p",[t._v("图的遍历\n两种遍历算法：")]),t._v(" "),_("ul",[_("li",[t._v("深度优先遍历；")]),t._v(" "),_("li",[t._v("广度优先遍历；")])]),t._v(" "),_("h3",{attrs:{id:"深度优先遍历-dfs"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#深度优先遍历-dfs"}},[t._v("#")]),t._v(" 深度优先遍历（DFS）")]),t._v(" "),_("p",[t._v("深度优先遍历（"),_("code",[t._v("Depth-First-Search")]),t._v("），是搜索算法的一种，它沿着树的深度遍历树的节点，尽可能深地搜索树的分支。当"),_("code",[t._v("节点v")]),t._v("的所有边都已被探寻过，将\n回溯到发现"),_("code",[t._v("节点v")]),t._v("的那条边的起始节点。这一过程一直进行到已探寻源节点到其他所有节点为止，如果还有未被发现的节点，则选择其中一个未被发现的节点为源节点并重复以上操作，直到所有节点都被探寻完成。")]),t._v(" "),_("p",[t._v("简单的说，"),_("code",[t._v("DFS")]),t._v("就是从图中的一个节点开始追溯，直到最后一个节点，然后回溯，继续追溯下一条路径，直到到达所有的节点，如此往复，直到没有路径为止。")]),t._v(" "),_("p",[_("code",[t._v("DFS")]),t._v(" 可以产生相应图的拓扑排序表，利用拓扑排序表可以解决很多问题，例如最大路径问题。一般用堆数据结构来辅助实现 "),_("code",[t._v("DFS")]),t._v(" 算法。")]),t._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),_("p",[t._v("深度 "),_("code",[t._v("DFS")]),t._v(" 属于盲目搜索，无法保证搜索到的路径为最短路径，也不是在搜索特定的路径，而是通过搜索来查看图中有哪些路径可以选择。")])]),t._v(" "),_("h3",{attrs:{id:"广度优先遍历-bfs"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#广度优先遍历-bfs"}},[t._v("#")]),t._v(" 广度优先遍历（BFS）")]),t._v(" "),_("p",[t._v("广度优先遍历（"),_("code",[t._v("Breadth-First-Search")]),t._v("）是从根节点开始，沿着图的宽度遍历节点，如果所有的节点均被访问过，则算法终止，BFS 同样属于盲目搜索，一般用队列\n数据结构来辅助实现"),_("code",[t._v("BFS")]),t._v("。")]),t._v(" "),_("p",[_("code",[t._v("BFS")]),t._v("从一个节点开始，尝试访问尽可能接近它的目标节点。本质上这种遍历在图上是逐层移动的，首先检查最靠近第一个节点的层，再逐渐向下移动到离起始节点最远的层。")])])}),[],!1,null,null,null);v.default=a.exports}}]);