(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{403:function(t,a,e){"use strict";e.r(a);var s=e(25),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"golang-模块化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#golang-模块化"}},[t._v("#")]),t._v(" Golang 模块化")]),t._v(" "),e("p",[t._v("使用模块化，需要添加以下")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("export GO111MODULE=on \nexport GOROOT=/opt/go \nexport PATH=$PATH:$GOROOT/bin\n")])])]),e("p",[t._v("使配置生效：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("source /etc/profile\n")])])]),e("p",[t._v("初始化一个mod环境，这里后面跟的是一个mod(modules)名称，名称可以随意。但是不能存在相同名字的。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("go mod init goDataTest \n")])])]),e("p",[t._v("如果导入本地包，需要在import里带上模块的名字，例如：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('import "goDataTest/api"\n')])])])])}),[],!1,null,null,null);a.default=r.exports}}]);