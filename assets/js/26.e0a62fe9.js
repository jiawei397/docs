(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{393:function(s,t,a){"use strict";a.r(t);var e=a(25),r=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"docker小结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker小结"}},[s._v("#")]),s._v(" docker小结")]),s._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#安装"}},[s._v("安装")]),a("ul",[a("li",[a("a",{attrs:{href:"#_1-ubuntu"}},[s._v("1. ubuntu")])]),a("li",[a("a",{attrs:{href:"#_2-启动"}},[s._v("2. 启动")])]),a("li",[a("a",{attrs:{href:"#_3-测试运行-hello-world"}},[s._v("3. 测试运行hello-world")])]),a("li",[a("a",{attrs:{href:"#_4-镜像加速"}},[s._v("4. 镜像加速")])]),a("li",[a("a",{attrs:{href:"#_5-普通用户加入-docker-组"}},[s._v("5. 普通用户加入docker组")])])])]),a("li",[a("a",{attrs:{href:"#容器"}},[s._v("容器")]),a("ul",[a("li",[a("a",{attrs:{href:"#_1-运行"}},[s._v("1. 运行")])]),a("li",[a("a",{attrs:{href:"#_2-运行交互式的容器"}},[s._v("2. 运行交互式的容器")])]),a("li",[a("a",{attrs:{href:"#_3-启动容器-后台模式"}},[s._v("3. 启动容器（后台模式）")])]),a("li",[a("a",{attrs:{href:"#_4-查看容器"}},[s._v("4. 查看容器")])]),a("li",[a("a",{attrs:{href:"#_5-停止容器"}},[s._v("5. 停止容器")])]),a("li",[a("a",{attrs:{href:"#_6-移除容器"}},[s._v("6. 移除容器")])])])]),a("li",[a("a",{attrs:{href:"#镜像"}},[s._v("镜像")]),a("ul",[a("li",[a("a",{attrs:{href:"#_1-查看镜像"}},[s._v("1. 查看镜像")])]),a("li",[a("a",{attrs:{href:"#_2-创建镜像"}},[s._v("2. 创建镜像")])]),a("li",[a("a",{attrs:{href:"#_3-更新"}},[s._v("3. 更新")])]),a("li",[a("a",{attrs:{href:"#_4-删除"}},[s._v("4. 删除")])]),a("li",[a("a",{attrs:{href:"#_5-设置镜像标签"}},[s._v("5. 设置镜像标签")])])])]),a("li",[a("a",{attrs:{href:"#dockerfile样例"}},[s._v("Dockerfile样例")])]),a("li",[a("a",{attrs:{href:"#重启docker服务"}},[s._v("重启docker服务")]),a("ul",[a("li",[a("a",{attrs:{href:"#systemctl-方式"}},[s._v("systemctl 方式")])]),a("li",[a("a",{attrs:{href:"#service-方式"}},[s._v("service 方式")])])])]),a("li",[a("a",{attrs:{href:"#ssh"}},[s._v("ssh")])])])]),a("p"),s._v(" "),a("p",[s._v("Docker是一个开源的容器引擎，它有助于更快地交付产品。")]),s._v(" "),a("p",[s._v("Docker可将应用程序和基础设施层隔离，并且将基础设施当作程序一样进行管理。使用Docker，可以更快地打包，测试以及部署应用程序，并可以缩短从编程到部署运行代码的周期。")]),s._v(" "),a("h2",{attrs:{id:"安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[s._v("#")]),s._v(" 安装")]),s._v(" "),a("h3",{attrs:{id:"_1-ubuntu"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-ubuntu"}},[s._v("#")]),s._v(" 1. ubuntu")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" -qO- https://get.docker.com/ "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v("\n")])])]),a("p",[s._v("当要以非"),a("code",[s._v("root")]),s._v("用户可以直接运行"),a("code",[s._v("docker")]),s._v("时，需要执行 "),a("code",[s._v("sudo usermod -aG docker runoob")]),s._v(" 命令，然后重新登陆，否则会报错")]),s._v(" "),a("p",[s._v("或者安装"),a("code",[s._v("Docker")]),s._v("社区版仓库")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" -y "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  apt-transport-https "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  ca-certificates "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -fsSL https://download.docker.com/linux/ubuntu/gpg "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" apt-key "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" -\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" add-apt-repository "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n       "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\\n       '),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("lsb_release -cs"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v(' \\\n       stable"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" update\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#在Ubuntu上安装最新的Docker社区版")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" -y "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" docker-ce\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#测试你的Docker社区版是否安装成功")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" docker run hello-world\n")])])]),a("h3",{attrs:{id:"_2-启动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-启动"}},[s._v("#")]),s._v(" 2. 启动")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("service")]),s._v(" docker start\n")])])]),a("h3",{attrs:{id:"_3-测试运行hello-world"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-测试运行hello-world"}},[s._v("#")]),s._v(" 3. 测试运行"),a("code",[s._v("hello-world")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("docker run hello-world\n")])])]),a("h3",{attrs:{id:"_4-镜像加速"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-镜像加速"}},[s._v("#")]),s._v(" 4. 镜像加速")]),s._v(" "),a("p",[s._v("鉴于国内网络问题，后续拉取 "),a("code",[s._v("Docker")]),s._v(" 镜像十分缓慢，我们可以需要配置加速器来解决，比如"),a("a",{attrs:{href:"http://hub-mirror.c.163.com",title:"网易镜像",target:"_blank",rel:"noopener noreferrer"}},[s._v("网易的镜像地址"),a("OutboundLink")],1),s._v("。")]),s._v(" "),a("p",[s._v("新版的 "),a("code",[s._v("Docker")]),s._v(" 使用 "),a("code",[s._v("/etc/docker/daemon.json")]),s._v("（"),a("code",[s._v("Linux")]),s._v("） 或者 "),a("code",[s._v("%programdata%\\docker\\config\\daemon.json")]),s._v("（"),a("code",[s._v("Windows")]),s._v("） 来配置 "),a("code",[s._v("Daemon")]),s._v("。")]),s._v(" "),a("p",[s._v("请在该配置文件中加入（没有该文件的话，请先建一个）：")]),s._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"registry-mirrors"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http://hub-mirror.c.163.com"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("或者注册"),a("a",{attrs:{href:"https://cr.console.aliyun.com/#/accelerator",target:"_blank",rel:"noopener noreferrer"}},[s._v("阿里云账户"),a("OutboundLink")],1),s._v("，可以获得自己的"),a("a",{attrs:{href:"https://xn--rcaaaaaa.mirror.aliyuncs.com",target:"_blank",rel:"noopener noreferrer"}},[s._v("加速器"),a("OutboundLink")],1),s._v("。")]),s._v(" "),a("p",[s._v("针对"),a("code",[s._v("Docker")]),s._v("客户端版本大于"),a("code",[s._v("1.10.0")]),s._v("的用户，可以通过修改"),a("code",[s._v("daemon")]),s._v("配置文件"),a("code",[s._v("/etc/docker/daemon.json")]),s._v("来使用加速器：")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p /etc/docker\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),s._v(" /etc/docker/daemon.json "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<-")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'EOF\'\n{\n  "registry-mirrors": ["https://6fzym3rt.mirror.aliyuncs.com"]\n}\nEOF')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl daemon-reload\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl restart docker\n")])])]),a("h3",{attrs:{id:"_5-普通用户加入docker组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-普通用户加入docker组"}},[s._v("#")]),s._v(" 5. 普通用户加入"),a("code",[s._v("docker")]),s._v("组")]),s._v(" "),a("p",[s._v("有时候，不想每次输入"),a("code",[s._v("sudo")]),s._v("，这时，我们可以将用户加入"),a("code",[s._v("docker")]),s._v("组。当然，这是不安全的，官方不推荐这样做。")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建docker组（如果没有的话）")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("groupadd")]),s._v(" docker\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将当前用户加入docker组")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" gpasswd -a "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${"),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("USER")]),s._v("}")]),s._v(" docker\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重新启动docker服务")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("service")]),s._v(" docker restart或sudo systemctl restart docker\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 当前用户退出系统重新登陆")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("su")]),s._v(" root\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("su")]),s._v(" franson\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 运行docker命令")]),s._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v("\n")])])]),a("h2",{attrs:{id:"容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#容器"}},[s._v("#")]),s._v(" 容器")]),s._v(" "),a("h3",{attrs:{id:"_1-运行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-运行"}},[s._v("#")]),s._v(" 1. 运行")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("docker run alpine:latest /bin/echo "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello world"')]),s._v("\n")])])]),a("h3",{attrs:{id:"_2-运行交互式的容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-运行交互式的容器"}},[s._v("#")]),s._v(" 2. 运行交互式的容器")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("docker run -i -t -v /test:/soft ubuntu:15.10 /bin/bash\n")])])]),a("p",[s._v("各个参数解析：")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("-t:在新容器内指定一个伪终端或终端。\n\n-i:允许你对容器内的标准输入 (STDIN) 进行交互。\n\n-v:挂载容器，前者是宿主机中目录，后者是容器内目录，再加个`:`的话，是权限\n")])])]),a("h3",{attrs:{id:"_3-启动容器-后台模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-启动容器-后台模式"}},[s._v("#")]),s._v(" 3. 启动容器（后台模式）")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('docker run -d ubuntu:15.10 /bin/sh -c "while true; do echo hello world; sleep 1; done"\n')])])]),a("p",[s._v("这时，容器在后台运行，当前输入容器不会打印"),a("code",[s._v("hello world")]),s._v("，只会返回一个"),a("code",[s._v("ID")]),s._v("号，通过它，可以使用"),a("code",[s._v("docker logs $ID")]),s._v("来查看输出内容。"),a("code",[s._v("docker logs -f $ID")]),s._v("可以让 "),a("code",[s._v("dokcer logs")]),s._v(" 像使用 "),a("code",[s._v("tail -f")]),s._v(" 一样来输出容器内部的标准输出。")]),s._v(" "),a("p",[s._v("指定"),a("code",[s._v("-p")]),s._v("标识来绑定指定端口。默认开放"),a("code",[s._v("5000")]),s._v("，映射到主机端口"),a("code",[s._v("32769")]),s._v("上。")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("docker run -d -p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5000")]),s._v(":5000 xx/1.0 node app.js\n")])])]),a("p",[s._v("已经停止的："),a("code",[s._v("docker start container_id")])]),s._v(" "),a("p",[s._v("正地运行的重启："),a("code",[s._v("docker restart")])]),s._v(" "),a("p",[s._v("进入容器："),a("code",[s._v("docker exec -it container_id /bin/bash")])]),s._v(" "),a("p",[s._v("特权方式："),a("code",[s._v("docker run -it --privileged -v /test:/soft centos /bin/bash")])]),s._v(" "),a("h3",{attrs:{id:"_4-查看容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-查看容器"}},[s._v("#")]),s._v(" 4. 查看容器")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker ps # 正在运行的\n\ndocker ps -a\t# 所有的\n\ndocker ps -l\t# 最后一次创建的\n\ndocker top determined_swanson # 查看进程\n\ndocker inspect determined_swanson\t# 底层信息\n")])])]),a("h3",{attrs:{id:"_5-停止容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-停止容器"}},[s._v("#")]),s._v(" 5. 停止容器")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("docker stop container_id\ndocker stop "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("docker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -a -q"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 停止所有容器")]),s._v("\n")])])]),a("h3",{attrs:{id:"_6-移除容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-移除容器"}},[s._v("#")]),s._v(" 6. 移除容器")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("docker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" container_id\ndocker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("docker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -a -q"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除所有未运行 Docker 容器")]),s._v("\n")])])]),a("p",[s._v("有时候会遇到停止"),a("code",[s._v("docker")]),s._v("容器失败的情况，需要强制移除容器")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("docker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -f container_id\n")])])]),a("h2",{attrs:{id:"镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#镜像"}},[s._v("#")]),s._v(" 镜像")]),s._v(" "),a("h3",{attrs:{id:"_1-查看镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-查看镜像"}},[s._v("#")]),s._v(" 1. 查看镜像")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看所有镜像")]),s._v("\ndocker images\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 搜索服务器上可用的镜像")]),s._v("\ndocker search httpd\n")])])]),a("h3",{attrs:{id:"_2-创建镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-创建镜像"}},[s._v("#")]),s._v(" 2. 创建镜像")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 下载")]),s._v("\ndocker pull httpd\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 最小镜像")]),s._v("\nalpine\n")])])]),a("p",[s._v("当我们从"),a("code",[s._v("docker")]),s._v("镜像仓库中下载的镜像不能满足我们的需求时，我们可以通过以下两种方式对镜像进行更改。")]),s._v(" "),a("ul",[a("li",[s._v("从已经创建的容器中更新镜像，并且提交这个镜像，详见下节"),a("code",[s._v("更新")])]),s._v(" "),a("li",[s._v("使用 "),a("code",[s._v("Dockerfile")]),s._v(" 指令来创建一个新的镜像")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker build -t xx:1.0 .\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("参数说明")]),s._v(" "),a("p",[s._v("-t ：指定要创建的目标镜像名")]),s._v(" "),a("p",[s._v(". ："),a("code",[s._v("Dockerfile")]),s._v(" 文件所在目录，可以指定"),a("code",[s._v("Dockerfile")]),s._v(" 的绝对路径")])]),s._v(" "),a("h3",{attrs:{id:"_3-更新"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-更新"}},[s._v("#")]),s._v(" 3. 更新")]),s._v(" "),a("p",[s._v("更新镜像之前，我们需要使用镜像来创建一个容器。")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("docker run -t -i ubuntu:15.10 /bin/bash\n")])])]),a("p",[s._v("在运行的容器内进行操作，输入"),a("code",[s._v("exit")]),s._v("命令来退出这个容器。此时这个容器，是按我们的需求更改的容器。我们可以通过命令 "),a("code",[s._v("docker commit")]),s._v("来提交容器副本。")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("docker commit -m"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"has update"')]),s._v(" -a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"runoob"')]),s._v(" e218edb10161 runoob/ubuntu:v2\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("参数说明")]),s._v(" "),a("p",[s._v("-m：提交的描述信息")]),s._v(" "),a("p",[s._v("-a：指定镜像作者")]),s._v(" "),a("p",[s._v("e218edb10161：容器ID")]),s._v(" "),a("p",[s._v("runoob/ubuntu:v2：指定要创建的目标镜像名")])]),s._v(" "),a("h3",{attrs:{id:"_4-删除"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-删除"}},[s._v("#")]),s._v(" 4. 删除")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除特定镜像")]),s._v("\ndocker rmi "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除所有未打tag的镜像")]),s._v("\ndocker rmi "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("docker images -q "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/^<none>/ { print "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$3")]),s._v(" }'")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除所有镜像")]),s._v("\ndocker rmi "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("docker images -q"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除没有使用的镜像")]),s._v("\ndocker rmi -f "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("docker images "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<none>"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"{print \\'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$3")]),s._v('}"')]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n")])])]),a("h3",{attrs:{id:"_5-设置镜像标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-设置镜像标签"}},[s._v("#")]),s._v(" 5. 设置镜像标签")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("docker tag 860c279d2fec runoob/centos:dev\n")])])]),a("h2",{attrs:{id:"dockerfile样例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile样例"}},[s._v("#")]),s._v(" Dockerfile样例")]),s._v(" "),a("div",{staticClass:"language-dockerfile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 用这个文件生成gitlab-ci需要的docker容器")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 同时需要有个jdk-8u161-linux-x64.tar.gz文件放在与它同级的目录下")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 构建镜像：docker build -t xx:1.0 .")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建容器：docker run -t -i xx:1.0  /bin/bash")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("9\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定制作我们的镜像的联系人信息（镜像创建者）")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("MAINTAINER")]),s._v(" jw\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将根目录下的文件都copy到container（运行此镜像的容器）文件系统的app文件夹下")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" . /app/\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cd到app文件夹下")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" /app\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#apt-get update")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" apt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("get update && apt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("get install sshpass\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#生成ssh的key")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" ssh"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("keygen "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("t rsa\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#将jre包移动到 /usr/lib/jvm/目录下并解压")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" mkdir /usr/lib/jvm \\\n    && mv /app/jdk"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("8u161"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("linux"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("x64.tar.gz /usr/lib/jvm \\\n    && cd /usr/lib/jvm \\\n    && tar "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("xzvf jdk"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("8u161"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("linux"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("x64.tar.gz\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#设置路径")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" update"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("alternatives "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("install "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/usr/bin/java"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"java"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/usr/lib/jvm/jdk1.8.0_161/jre/bin/java"')]),s._v(" 1 \\\n      && update"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("alternatives "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("set java /usr/lib/jvm/jdk1.8.0_161/jre/bin/java\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装淘宝镜像")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" npm install cnpm "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("g "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("registry=https"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("//registry.npm.taobao.org\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 配置环境变量")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENV")]),s._v(" JAVA_HOME /usr/lib/jvm/jre\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENV")]),s._v(" HOST 0.0.0.0\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENV")]),s._v(" PORT 8000\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 容器对外暴露的端口号")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXPOSE")]),s._v(" 8000\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 容器启动时执行的命令，类似npm run start")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#CMD [")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"npm"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"start"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])])]),a("h2",{attrs:{id:"重启docker服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重启docker服务"}},[s._v("#")]),s._v(" 重启docker服务")]),s._v(" "),a("h3",{attrs:{id:"systemctl-方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#systemctl-方式"}},[s._v("#")]),s._v(" systemctl 方式")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 守护进程重启")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl daemon-reload\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重启docker服务")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl restart docker\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 关闭docker")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl stop docker\n")])])]),a("h3",{attrs:{id:"service-方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#service-方式"}},[s._v("#")]),s._v(" service 方式")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重启docker服务")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("service")]),s._v(" docker restart\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 关闭docker")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("service")]),s._v(" docker stop\n")])])]),a("h2",{attrs:{id:"ssh"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ssh"}},[s._v("#")]),s._v(" ssh")]),s._v(" "),a("ul",[a("li",[s._v("使用"),a("code",[s._v("sshpass")]),s._v("来调用外部的命令：")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("sshpass -p 密码 "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" 用户名@IP -p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("22")]),s._v(" -o "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("StrictHostKeyChecking")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("no "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ls /root'")]),s._v("\n")])])]),a("ul",[a("li",[s._v("远程文件同步到当前目录（.）下")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("scp")]),s._v(" -r "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".1.140:/opt/docker-volume/php/owncloud/apps/edu_video.tar.gz "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n")])])]),a("ul",[a("li",[s._v("从主机复制到容器")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("docker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" host_path containerID:container_path\n")])])]),a("ul",[a("li",[s._v("从容器复制到主机")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("docker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" containerID:container_path host_path\n")])])]),a("ul",[a("li",[s._v("生成ssh")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("ssh-keygen -t rsa\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("scp")]),s._v(" -r /root/.ssh/id_rsa.pub 目标IP:/root/.ssh/authorized_keys\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);