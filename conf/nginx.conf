#user XX administrator administrators;
worker_processes  2;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

	#设定日志格式
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                 '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

	#sendfile 指令指定 nginx 是否调用 sendfile 函数（zero copy 方式）来输出文件，
    #对于普通应用，必须设为 on,
    #如果用来进行下载等应用磁盘IO重负载应用，可设置为 off，
    #以平衡磁盘与网络I/O处理速度，降低系统的uptime.
    sendfile        on;
    #tcp_nopush     on;

	#连接超时时间
    #keepalive_timeout  0;
    keepalive_timeout  65;

	#开启gzip压缩
	gzip on;

	#不压缩临界值，大于1K的才压缩，一般不用改
	gzip_min_length 10k;
	gzip_buffers 4 16k;

	#用了反向代理的话，末端通信是HTTP/1.0；默认是HTTP/1.1
	#gzip_http_version 1.0;

	#压缩级别，1-10，数字越大压缩的越好，时间也越长
	gzip_comp_level 2;

	# nginx 做前端代理时启用该选项，表示无论后端服务器的headers头返回什么信息，都无条件启用压缩
    gzip_proxied any;

	#进行压缩的文件类型，缺啥补啥就行了，JavaScript有两种写法，最好都写上吧，总有人抱怨js文件没有压缩，其实多写一种格式就行了
	#如果开启了对js压缩，则在Response Headers里可以看到，Content-Encoding:gzip，Transfer-Encoding:chunked
	gzip_types text/plain application/x-javascript text/css application/xml application/javascript text/javascript application/x-httpd-php image/jpeg image/gif image/png;

	#跟Squid等缓存服务有关，on的话会在Header里增加"Vary: Accept-Encoding"，我不需要这玩意，自己对照情况看着办吧
	gzip_vary off;

	#IE6对Gzip不怎么友好，不给它Gzip了
	gzip_disable "MSIE [1-6]\.";

	#设定请求缓冲
    #client_header_buffer_size    128k;
    #large_client_header_buffers  4 128k;

	#包含其它配置文件
	include nginx-fl.conf;
}
